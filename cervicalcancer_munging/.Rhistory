#Let's sort all the boolean values out
cervical$c(1)
#Let's sort all the boolean values out
cervical(min)
#Let's sort all the boolean values out
cervical$age(min)
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
ints <- cervical[, c(1:4, 9, 11, 13, 26:28, )]
ints <- cervical[, c(1:4, 9, 11, 13, 26:28)]
dim(booleans)
dim(reals)
reals <- cervical[, c(6, 7)]
dim(reals)
dim(ints)
#replacing the boolean values with
nulls<- NULL
for(i in 1:length(booleans)){
if(is.na(booleans[i])==TRUE)
nulls<- append((nulls), i)
}
if(is.na(booleans[i])==TRUE)
nulls<- append((nulls), i)
booleansnew <- replace(booleans, nulls, sample(c(0, 1), length(nulls), replace = TRUE))
booleans
summary(booleans)
summary(booleansnew)
summary(booleans)
nulls <- append((nulls), i)
for(i in 1:length(booleans)){
if(is.na(booleans[i])==TRUE)
nulls <- append((nulls), i)
}
booleansnew <- replace(booleans, nulls, sample(c(0, 1), length(nulls), replace = TRUE))
summary(booleansnew)
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
datasetnew
dataset=c(1,0,0,1,1,1,NA,NA,NA,NA,1)
nulls<- NULL
for(i in 1:length(dataset)){
if(is.na(dataset[i])==TRUE)
nulls<- append((nulls), i)
}
datasetnew <- replace(dataset, nulls, sample(c(0, 1), length(nulls), replace = TRUE))
dataset
datasetnew
dim(booleans)
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
booleans[is.na(booleans)] = sample(c(0, 1))
summary(ints)
booleans[is.na(booleans)] <- sample(c(0, 1))
booleans[is.na(booleans)] <- replace(sample(c(0, 1)), replace=TRUE)
booleans[is.na(booleans)] <- replace(sample(c(0, 1)))
booleans[is.na(booleans)] <- replace(booleans[is.na(booleans)], sample(c(0, 1)))
booleans <- replace(booleans[is.na(booleans)], sample(c(0, 1)))
booleans <- replace(booleans, is.na(booleans), sample(c(0, 1)))
booleans[is.na(booleans)] <- sample(0, 1, replace=TRUE)
booleans
summary(booleans)
booleans[is.na(booleans)] <- sample(c(0, 1), 1, replace=TRUE)
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
summary(boolean)
booleans[is.na(booleans)] <- sample(c(0, 1), 1, replace=TRUE)
summary(booleans)
booleans <- lapply(data[booleans], as.logical)
booleans <- lapply(booleans, as.logical)
booleans
#Display results
summary(booleans)
#Now we look at the int and real values
summary(ints)
summary(reals)
#Both of these datasets contain columns with missing values, so we will replace those values with the mean
ints$number_of_sexual_partners <- ifelse(is.na(ints$number_of_sexual_partners),
mean(ints$number_of_sexual_partners, na.rm=TRUE),
ints$number_of_sexual_partners)
ints[is.na(ints[,i]), i] <- mean(ints[,i], na.rm = TRUE)
#Both of these datasets contain columns with missing values, so we will replace those values with the mean
for(i in 1:ncol(ints)){
ints[is.na(ints[,i]), i] <- mean(ints[,i], na.rm = TRUE)
}
summary(ints)
for(i in 1:ncol(reals)){
reals[is.na(data[,i]), i] <- mean(reals[,i], na.rm = TRUE)
}
for(i in 1:ncol(reals)){
reals[is.na(reals[,i]), i] <- mean(reals[,i], na.rm = TRUE)
}
summary(reals)
#All missing data in all of our data classes, time to merge all the data to create one dataset
cervicalnew <- rbind(booleans, ints, reals)
#All missing data in all of our data classes, time to merge all the data to create one dataset
cervical1 <- rbind(booleans, ints)
#All missing data in all of our data classes, time to merge all the data to create one dataset
dim(booleans)
cervicaln <- (reals, ints)
cervicaln <- rbind(reals, ints)
dim(reals)
dim(ints)
cervicaln <- cbind(reals, ints)
booleans
#All missing data in all of our data classes, time to merge all the data to create one dataset
rm(list=ls())
#Basic setup
setwd("C:/Users/Srikant/Desktop/Data Science/Week 5/Case Study 1")
library(tidyverse)
library(stringr)
source("./myfunctionsaug.R")
cervical <- read.csv("./cervicalCA.csv", na.strings=c("?"))
#Basic descriptive statistics
summary(cervical)
dim(cervical)
str(cervical)
glimpse(cervical)
names(cervical)
head(cervical)
names(cervical) <- str_replace_all(names(cervical), "\\.+", "_")
#Check if it worked
names(cervical)
#Change all the name strings to lower case
names(cervical) <- str_to_lower(names(cervical))
#Check if it worked
names(cervical)
#See which values are boolean, real and int (or look at case study)
summary(cervical)
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
reals <- cervical[, c(6, 7)]
ints <- cervical[, c(1:4, 9, 11, 13, 26:28)]
#make sure we have covered all 36 columns
dim(booleans)
dim(reals)
dim(ints)
booleans[is.na(booleans)] <- sample(c(0, 1), 1, replace=TRUE)
#Check if it worked
summary(booleans)
#Change the boolean to logical
booleans <- lapply(booleans, as.logical)
#Display results
summary(booleans)
#Now we look at the int and real values
summary(ints)
summary(reals)
#Both of these datasets contain columns with missing values, so we will replace those values with the mean
for(i in 1:ncol(ints)){
ints[is.na(ints[,i]), i] <- mean(ints[,i], na.rm = TRUE)
}
summary(ints)
for(i in 1:ncol(reals)){
reals[is.na(reals[,i]), i] <- mean(reals[,i], na.rm = TRUE)
}
summary(reals)
#All missing data in all of our data classes, time to merge all the data to create one dataset
cervicalNEW <- cbind(reals, ints, booleans)
summary(cervicalNEW)
booleans[is.na(booleans)] <- sample(0:1, 1, replace=TRUE)
rm(list=ls())
#Basic setup
setwd("C:/Users/Srikant/Desktop/Data Science/Week 5/Case Study 1")
library(tidyverse)
library(stringr)
source("./myfunctionsaug.R")
cervical <- read.csv("./cervicalCA.csv", na.strings=c("?"))
#Basic descriptive statistics
summary(cervical)
dim(cervical)
str(cervical)
glimpse(cervical)
names(cervical)
head(cervical)
names(cervical) <- str_replace_all(names(cervical), "\\.+", "_")
#Check if it worked
names(cervical)
#Change all the name strings to lower case
names(cervical) <- str_to_lower(names(cervical))
#Check if it worked
names(cervical)
#See which values are boolean, real and int (or look at case study)
summary(cervical)
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
reals <- cervical[, c(6, 7)]
ints <- cervical[, c(1:4, 9, 11, 13, 26:28)]
#make sure we have covered all 36 columns
dim(booleans)
dim(reals)
dim(ints)
booleans[is.na(booleans)] <- sample(0:1, 1, replace=TRUE)
#Check if it worked
summary(booleans)
#Change the boolean to logical
booleans <- lapply(booleans, as.logical)
#Display results
summary(booleans)
#Now we look at the int and real values
summary(ints)
summary(reals)
#Both of these datasets contain columns with missing values, so we will replace those values with the mean
for(i in 1:ncol(ints)){
ints[is.na(ints[,i]), i] <- mean(ints[,i], na.rm = TRUE)
}
summary(ints)
for(i in 1:ncol(reals)){
reals[is.na(reals[,i]), i] <- mean(reals[,i], na.rm = TRUE)
}
summary(reals)
#All missing data in all of our data classes, time to merge all the data to create one dataset
cervicalNEW <- cbind(reals, ints, booleans)
summary(cervicalNEW)
#The final manipulation we have to perform before writing to a new csv file is to normalize the numerical data
for(i in 1:ncol(ints)){
hist(ints[, i])
}
#The final manipulation we have to perform before writing to a new csv file is to normalize the numerical data
names(cervicalNEW)
#The first 12 columns are numerical data, so we will be normalizing those data
for(i in 1:12){
rz.transform(cervicalNEW[, i])
}
#We can look at some histograms to see if we need any other modification to the shape of the distributions
hist(cervicalNEW$smokes_years_)
#The first 12 columns are numerical data, so we will be normalizing those data
#First we need to see which data need normalization
rm(list=ls())
#Basic setup
setwd("C:/Users/Srikant/Desktop/Data Science/Week 5/Case Study 1")
library(tidyverse)
library(stringr)
source("./myfunctionsaug.R")
cervical <- read.csv("./cervicalCA.csv", na.strings=c("?"))
#Basic descriptive statistics
summary(cervical)
dim(cervical)
str(cervical)
glimpse(cervical)
names(cervical)
head(cervical)
names(cervical) <- str_replace_all(names(cervical), "\\.+", "_")
#Check if it worked
names(cervical)
#Change all the name strings to lower case
names(cervical) <- str_to_lower(names(cervical))
#Check if it worked
names(cervical)
#See which values are boolean, real and int (or look at case study)
summary(cervical)
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
reals <- cervical[, c(6, 7)]
ints <- cervical[, c(1:4, 9, 11, 13, 26:28)]
#make sure we have covered all 36 columns
dim(booleans)
dim(reals)
dim(ints)
booleans[is.na(booleans)] <- sample(0:1, 1, replace=TRUE)
#Check if it worked
summary(booleans)
#Change the boolean to logical
booleans <- lapply(booleans, as.logical)
#Display results
summary(booleans)
#Now we look at the int and real values
summary(ints)
summary(reals)
#Both of these datasets contain columns with missing values, so we will replace those values with the mean
for(i in 1:ncol(ints)){
ints[is.na(ints[,i]), i] <- mean(ints[,i], na.rm = TRUE)
}
summary(ints)
for(i in 1:ncol(reals)){
reals[is.na(reals[,i]), i] <- mean(reals[,i], na.rm = TRUE)
}
summary(reals)
#We have replaced all missing data in all of our data classes, time to merge all the data to create one dataset
cervicalNEW <- cbind(reals, ints, booleans)
summary(cervicalNEW)
#The final manipulation we have to perform before writing to a new csv file is to normalize the numerical data
names(cervicalNEW)
#The first 12 columns are numerical data, so we will be normalizing those data
#The first 12 columns are numerical data, so we will be normalizing those data
#First we need to see which data need normalization
hist(cervicalNEW[, 2])
#The first 12 columns are numerical data, so we will be normalizing those data
#First we need to see which data need normalization
hist(cervicalNEW[, 1])
#The first 12 columns are numerical data, so we will be normalizing those data
#First we need to see which data need normalization
hist(cervicalNEW[, 12])
#The first 12 columns are numerical data, so we will be *approximately* normalizing those data
#First we need to see which data need normalization
names(cervicalNEW[, 1])
#The first 12 columns are numerical data, so we will be *approximately* normalizing those data
#First we need to see which data need normalization=
for(i in 1:12){
hist(cervicalNEW[, i], main = i)
}
#I am only looking for severly skewed data, approximately normal and approximately skewed data will not be transformed
#Columns needing to be transformed: 1, 2, 4, 6, 7, 8, 9, 10
rz.transform(cervicalNEW[, 1])
rz.transform(cervicalNEW[, 2])
rz.transform(cervicalNEW[, 4])
rz.transform(cervicalNEW[, 6])
rz.transform(cervicalNEW[, 7])
rz.transform(cervicalNEW[, 8])
rz.transform(cervicalNEW[, 9])
rz.transform(cervicalNEW[, 10])
hist(cervicalNEW[, 4])
write.csv(cervicalNEW, file = "ccdataMod.csv")
#Basic setup
setwd("C:/Users/Srikant/Desktop/Data Science/Week 5/Case Study 1")
library(tidyverse)
library(stringr)
source("./myfunctionsaug.R")
cervical <- read.csv("./cervicalCA.csv", na.strings=c("?"))
#Basic descriptive statistics
summary(cervical)
dim(cervical)
str(cervical)
glimpse(cervical)
names(cervical)
head(cervical)
names(cervical) <- str_replace_all(names(cervical), "\\.+", "_")
#Check if it worked
names(cervical)
#Change all the name strings to lower case
names(cervical) <- str_to_lower(names(cervical))
#Check if it worked
names(cervical)
#See which values are boolean, real and int (or look at case study)
summary(cervical)
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
reals <- cervical[, c(6, 7)]
ints <- cervical[, c(1:4, 9, 11, 13, 26:28)]
#make sure we have covered all 36 columns
dim(booleans)
dim(reals)
dim(ints)
booleans[is.na(booleans)] <- sample(0:1, 1, replace=TRUE)
#Check if it worked
summary(booleans)
#Change the boolean to logical
booleans <- lapply(booleans, as.logical)
#Display results
summary(booleans)
#Now we look at the int and real values
summary(ints)
summary(reals)
#Both of these datasets contain columns with missing values, so we will replace those values with the mean
for(i in 1:ncol(ints)){
ints[is.na(ints[,i]), i] <- mean(ints[,i], na.rm = TRUE)
}
summary(ints)
for(i in 1:ncol(reals)){
reals[is.na(reals[,i]), i] <- mean(reals[,i], na.rm = TRUE)
}
summary(reals)
#We have replaced all missing data in all of our data classes, time to merge all the data to create one dataset
cervicalNEW <- cbind(reals, ints, booleans)
summary(cervicalNEW)
#The final manipulation we have to perform before writing to a new csv file is to normalize the numerical data
names(cervicalNEW)
#The first 12 columns are numerical data, so we will be *approximately* normalizing those data
#First we need to see which data need normalization=
for(i in 1:12){
hist(cervicalNEW[, i], main = i)
}
#I am only looking for severly skewed data, approximately normal and approximately skewed data will not be transformed
#Columns needing to be transformed: 1, 2, 4, 6, 7, 8, 9, 10
rz.transform(cervicalNEW[, 1])
rz.transform(cervicalNEW[, 2])
rz.transform(cervicalNEW[, 4])
rz.transform(cervicalNEW[, 6])
rz.transform(cervicalNEW[, 7])
rz.transform(cervicalNEW[, 8])
rz.transform(cervicalNEW[, 9])
rz.transform(cervicalNEW[, 10])
write.csv(cervicalNEW, file = "ccdataMod.csv")
#Basic setup
setwd("C:/Users/Srikant/Desktop/Data Science/Week 5/Case Study 1")
library(tidyverse)
library(stringr)
source("./myfunctionsaug.R")
cervical <- read.csv("./cervicalCA.csv", na.strings=c("?"))
#Basic descriptive statistics
summary(cervical)
dim(cervical)
str(cervical)
glimpse(cervical)
names(cervical)
head(cervical)
names(cervical) <- str_replace_all(names(cervical), "\\.+", "_")
#Check if it worked
names(cervical)
#Change all the name strings to lower case
names(cervical) <- str_to_lower(names(cervical))
#Check if it worked
names(cervical)
#See which values are boolean, real and int (or look at case study)
summary(cervical)
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
reals <- cervical[, c(6, 7)]
ints <- cervical[, c(1:4, 9, 11, 13, 26:28)]
#make sure we have covered all 36 columns
dim(booleans)
dim(reals)
dim(ints)
booleans[is.na(booleans)] <- sample(0:1, 1, replace=TRUE)
#Check if it worked
summary(booleans)
#Change the boolean to logical
booleans <- lapply(booleans, as.logical)
#Display results
summary(booleans)
#Now we look at the int and real values
summary(ints)
summary(reals)
#Both of these datasets contain columns with missing values, so we will replace those values with the mean
for(i in 1:ncol(ints)){
ints[is.na(ints[,i]), i] <- mean(ints[,i], na.rm = TRUE)
}
summary(ints)
for(i in 1:ncol(reals)){
reals[is.na(reals[,i]), i] <- mean(reals[,i], na.rm = TRUE)
}
summary(reals)
#We have replaced all missing data in all of our data classes, time to merge all the data to create one dataset
cervicalNEW <- cbind(reals, ints, booleans)
summary(cervicalNEW)
#The final manipulation we have to perform before writing to a new csv file is to normalize the numerical data
names(cervicalNEW)
#The first 12 columns are numerical data, so we will be *approximately* normalizing those data
#First we need to see which data need normalization=
for(i in 1:12){
hist(cervicalNEW[, i], main = i)
}
#I am only looking for severly skewed data, approximately normal and approximately skewed data will not be transformed
#Columns needing to be transformed: 1, 2, 4, 6, 7, 8, 9, 10
rz.transform(cervicalNEW[, 1])
rz.transform(cervicalNEW[, 2])
rz.transform(cervicalNEW[, 4])
rz.transform(cervicalNEW[, 6])
rz.transform(cervicalNEW[, 7])
rz.transform(cervicalNEW[, 8])
rz.transform(cervicalNEW[, 9])
rz.transform(cervicalNEW[, 10])
write.csv(cervicalNEW, file = "ccdataMod.csv")
#Basic setup
setwd("C:/Users/Srikant/Desktop/Data Science/Week 5/Case Study 1")
library(tidyverse)
library(stringr)
source("./myfunctionsaug.R")
cervical <- read.csv("./cervicalCA.csv", na.strings=c("?"))
#Basic descriptive statistics
summary(cervical)
names(cervical) <- str_replace_all(names(cervical), "\\.+", "_")
#Check if it worked
names(cervical)
#Change all the name strings to lower case
names(cervical) <- str_to_lower(names(cervical))
#Check if it worked
names(cervical)
#See which values are boolean, real and int (or look at case study)
summary(cervical)
booleans <- cervical[, c(5, 8, 10, 12, 14:25, 29:36)]
reals <- cervical[, c(6, 7)]
ints <- cervical[, c(1:4, 9, 11, 13, 26:28)]
#make sure we have covered all 36 columns
dim(booleans)
booleans[is.na(booleans)] <- sample(0:1, 1, replace=TRUE)
#Check if it worked
summary(booleans)
booleans <- lapply(booleans, as.logical)
#Display results
summary(booleans)
booleans
#Now we look at the int and real values
summary(ints)
summary(reals)
mean(ints[
#Both of these datasets contain columns with missing values, so we will replace those values with the mean
for(i in 1:ncol(ints)){
ints[is.na(ints[,i]), i] <- mean(ints[,i], na.rm = TRUE)
}
summary(ints)
summary(ints)
#Both of these datasets contain columns with missing values, so we will replace those values with the mean
for(i in 1:ncol(ints)){
ints[is.na(ints[,i]), i] <- mean(ints[,i], na.rm = TRUE)
}
summary(ints)
for(i in 1:ncol(reals)){
reals[is.na(reals[,i]), i] <- mean(reals[,i], na.rm = TRUE)
}
summary(reals)
#We have replaced all missing data in all of our data classes, time to merge all the data to create one dataset
cervicalNEW <- cbind(reals, ints, booleans)
summary(cervicalNEW)
#The final manipulation we have to perform before writing to a new csv file is to normalize the numerical data
names(cervicalNEW)
#The first 12 columns are numerical data, so we will be *approximately* normalizing those data
#First we need to see which data need normalization=
for(i in 1:12){
hist(cervicalNEW[, i], main = i)
}
#I am only looking for severly skewed data, approximately normal and approximately skewed data will not be transformed
#Columns needing to be transformed: 1, 2, 4, 6, 7, 8, 9, 10
rz.transform(cervicalNEW[, 1])
rz.transform(cervicalNEW[, 2])
rz.transform(cervicalNEW[, 4])
rz.transform(cervicalNEW[, 6])
rz.transform(cervicalNEW[, 7])
rz.transform(cervicalNEW[, 8])
rz.transform(cervicalNEW[, 9])
rz.transform(cervicalNEW[, 10])
write.csv(cervicalNEW, file = "ccdataMod.csv")
